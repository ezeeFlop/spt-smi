version: "3.8"

services:
  api:
    restart: always 
    image: spongetheory/spt-smi:latest
    ports:
      - "9999:9999"
      - "57000-57010:57000-57010"
    networks:
      - webfacing
      - dbs
      - servicesworkers
    depends_on:
      - redis
      - rabbitmq
      - minio
      - jobs
      - llmservice
      - audiosevice
      - imageservice
    environment:
      - STREAMING_PORTS_RANGE=57000-57010
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=jskdljflskdjflkjsqkjflkjqsldf564654
      - RABBITMQ_HOST=spt-smi_rabbitmq
      - REDIS_HOST=spt-smi_redis
      - IMAGE_GENERATION=spt-smi_imageservice:55001
      - LLM_GENERATION=spt-smi_llmservice:55002
      - AUDIO_GENERATION=spt-smi_audioservice:55003
      - CONFIG_PATH=/configs
      - MINIO_ROOT_USER=root
      - MINIO_SERVER_ENDPOINT=smi-minio.sponge-theory.dev
      - MINIO_ROOT_PASSWORD=Shes5z8pOv
      - MINIO_SERVER_URL=https://smi-minio.sponge-theory.dev
    volumes:
      - /data/smi/prod/data:/data
      - /data/smi/prod/configs:/configs
      - /var/run/docker.sock:/var/run/docker.sock # Mount the Docker socket
    command: "uvicorn spt.api.app:app --reload --app-dir /home/spt/src --port 9999 --host 0.0.0.0"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.GPU == false

  jobs:
    restart: always 
    image: spongetheory/spt-smi:latest
    networks:
      - dbs
      - servicesworkers
    depends_on:
      - redis
      - rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=jskdljflskdjflkjsqkjflkjqsldf564654
      - RABBITMQ_HOST=spt-smi_rabbitmq
      - REDIS_HOST=spt-smi_redis
      - IMAGE_GENERATION=spt-smi_imageservice:55001
      - LLM_GENERATION=spt-smi_llmservice:55002
      - AUDIO_GENERATION=spt-smi_audioservice:55003
      - CONFIG_PATH=/configs
      - MINIO_ROOT_USER=root
      - MINIO_SERVER_ENDPOINT=smi-minio.sponge-theory.dev
      - MINIO_ROOT_PASSWORD=Shes5z8pOv
      - MINIO_SERVER_URL=https://smi-minio.sponge-theory.dev
    volumes:
      - /data/smi/prod/data:/data
      - /data/smi/prod/configs:/configs
    command: "python -m spt.jobs"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.GPU == false

  llmservice:
    restart: always 
    image: spongetheory/spt-smi:latest
    ports:
      - "55002:55002"
      - "57011-57020:57011-57020"
    networks:
      - servicesworkers
      - dbs
      - ollama
    depends_on:
      - redis
      - rabbitmq
      - minio
      - ollama
    environment:
      - STREAMING_PORTS_RANGE=57011-57020
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=jskdljflskdjflkjsqkjflkjqsldf564654
      - LLM_GENERATION=0.0.0.0:55002
      - RABBITMQ_HOST=spt-smi_rabbitmq
      - REDIS_HOST=spt-smi_redis
      - CONFIG_PATH=/configs
      - OLLAMA_URL=spt-smi_ollama:11434
      - MINIO_ROOT_USER=root
      - MINIO_SERVER_ENDPOINT=smi-minio.sponge-theory.dev
      - MINIO_ROOT_PASSWORD=Shes5z8pOv
      - MINIO_SERVER_URL=https://smi-minio.sponge-theory.dev
    volumes:
      - /data/smi/prod/configs:/configs
      - /data/smi/prod/data:/data
      - /data/smi/prod/cache:/home/spt/.cache
      - /var/run/docker.sock:/var/run/docker.sock # Mount the Docker socket

    command: "python -m spt.services.server --host 0.0.0.0 --port 55002 --type LLM_SERVICE"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.GPU == true

  imageservice:
    restart: always 
    image: spongetheory/spt-smi:latest
    ports:
      - "55001:55001"
      - "57021-57030:57021-57030"
    networks:
      - servicesworkers
      - dbs
    depends_on:
      - redis
      - rabbitmq
      - minio
    environment:
      - STREAMING_PORTS_RANGE=57021-57030
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=jskdljflskdjflkjsqkjflkjqsldf564654
      - IMAGE_GENERATION=0.0.0.0:55001
      - RABBITMQ_HOST=spt-smi_rabbitmq
      - REDIS_HOST=spt-smi_redis
      - CONFIG_PATH=/configs
      - MINIO_ROOT_USER=root
      - MINIO_SERVER_ENDPOINT=smi-minio.sponge-theory.dev
      - MINIO_ROOT_PASSWORD=Shes5z8pOv
      - MINIO_SERVER_URL=https://smi-minio.sponge-theory.dev
    volumes:
      - /data/smi/prod/configs:/configs
      - /data/smi/prod/data:/data
      - /data/smi/prod/cache:/home/spt/.cache
      - /var/run/docker.sock:/var/run/docker.sock # Mount the Docker socket

    command: "python -m spt.services.server --host 0.0.0.0 --port 55001 --type IMAGE_SERVICE"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.GPU == true

  audioservice:
    restart: always 
    image: spongetheory/spt-smi:latest
    ports:
      - "55003:55003"
      - "57031-57040:57031-57040"
    networks:
      - servicesworkers
      - dbs
    depends_on:
      - redis
      - rabbitmq
      - minio
      - whisper
    environment:
      - STREAMING_PORTS_RANGE=57031-57040
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=jskdljflskdjflkjsqkjflkjqsldf564654
      - IMAGE_GENERATION=0.0.0.0:55001
      - RABBITMQ_HOST=spt-smi_rabbitmq
      - REDIS_HOST=spt-smi_redis
      - CONFIG_PATH=/configs
      - MINIO_ROOT_USER=root
      - MINIO_SERVER_ENDPOINT=smi-minio.sponge-theory.dev
      - MINIO_ROOT_PASSWORD=Shes5z8pOv
      - MINIO_SERVER_URL=https://smi-minio.sponge-theory.dev
      - TEMP_PATH=/temp
    volumes:
      - /data/smi/prod/configs:/configs
      - /data/smi/prod/data:/data
      - /data/smi/prod/temp:/temp
      - /data/smi/prod/cache:/home/spt/.cache
      - /data/smi/prod/cache:/home/spt/.local/share
      - /var/run/docker.sock:/var/run/docker.sock # Mount the Docker socket

    command: "python -m spt.services.server --host 0.0.0.0 --port 55003 --type AUDIO_SERVICE"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.GPU == true

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    environment:
      - REDIS_REPLICATION_MODE=master
      #- REDIS_PASSWORD=yourpassword # Définis le mot de passe de Redis (optionnel)
    volumes:
      - /data/smi/prod/redis:/data
    networks:
      - dbs
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.GPU == false
    
  rabbitmq:
    image: rabbitmq:3-management
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=jskdljflskdjflkjsqkjflkjqsldf564654
    ports:
      - "5672:5672"  # Port par défaut pour RabbitMQ
      - "15672:15672"  # Port pour la gestion via l'interface web
    volumes:
      - /data/smi/prod/rabbitmq/data:/var/lib/rabbitmq
      - /data/smi/prod/rabbitmq/config:/etc/rabbitmq
    deploy:
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.labels.GPU == false
    command: ["bash", "-c", "chmod 400 /var/lib/rabbitmq/.erlang.cookie; rabbitmq-server"]
    networks:
      - dbs

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "19002:19002"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=Shes5z8pOv
      - MINIO_SERVER_URL=https://smi-minio.sponge-theory.dev
      - MINIO_BROWSER_REDIRECT_URL=https://smi-minio-console.sponge-theory.dev
      - MINIO_CONSOLE_PORT=9001
      - MINIO_END_POINT=spt-smi-minio:9000
    networks:
      webfacing:
        aliases:
          - spt-smi-minio
      dbs:
        aliases:
          - spt-smi-minio
    command:  minio server /data --console-address ":19002"

  ollama:
    image: ollama/ollama:latest
    volumes:
      - /usr/share/ollama/.ollama:/root/.ollama
    tty: true
    environment:
      - OLLAMA_MAX_LOADED_MODELS=3
      - OLLAMA_NUM_PARALLEL=3
    ports:
      - 11434:11434
    networks:
      - ollama
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.GPU == true

networks:
  servicesworkers:
    driver: overlay
  webfacing:
    driver: overlay
    external: true
  dbs:
    driver: overlay
    internal: true
#    attachable: true
  ollama:
    driver: overlay
    external: true
    attachable: true

volumes:
  minio_data: